
class TestMatrix {

	static int MAX = 100;

//Fills transpose of mat[N][N] in tr[N][N]
	static void transpose (int mat[][], int tr[][], int N) {
		for (int i = 0; i < N; i++)
			for (int j = 0; j < N; j++)
				tr[i][j] = mat[j][i];
	}

//Returns true if mat[N][N] is symmetric, else false
	static boolean isSymmetric (int mat[][], int N) {
		int tr[][] = new int [N] [MAX];
		transpose(mat, tr, N);
		for (int i = 0; i < N; i++)
			for (int j = 0; j < N; j++)
				if (mat[i][j] != tr[i][j])
					return false;
		return true;
	}

//Driver code
	public static void main (String [] args) {

//		int mat[][] =
//			{
//					{ 0, 40, 20, 20, 30, 80, 0, 0, 0, 0, 70, 0 },
//					{ 0, 0, 0, 20, 40, 0, 0, 0, 0, 0, 5, 0 },
//					{ 0, 0, 0, 0, 0, 30, 0, 50, 0, 0, 30, 30 },
//					{ 0, 0, 10, 0, 0, 0, 0, 0, 0, 30, 50, 0 },
//					{ 0, 0, 0, 0, 0, 0, 40, 0, 0, 20, 0, 20 },
//					{ 10, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 60 },
//					{ 0, 0, 30, 90, 0, 60, 0, 0, 0, 0, 80, 0 },
//					{ 60, 0, 0, 50, 10, 0, 70, 0, 0, 0, 0, 0 },
//					{ 0, 0, 0, 0, 0, 0, 0, 40, 0, 70, 0, 10 },
//					{ 10, 60, 0, 0, 0, 80, 10, 0, 0, 0, 90, 0 },
//					{ 20, 60, 0, 0, 20, 0, 20, 0, 0, 0, 0, 0 },
//					{ 0, 70, 60, 0, 0, 90, 0, 0, 0, 0, 0, 0 } };
		int mat[][] =
			{
					{ 0, 0, 0, 0, 70, 0, 40, 60, 0, 0, 30, 0 },
					{ 0, 0, 0, 70, 50, 0, 0, 0, 20, 0, 0, 40 },
					{ 0, 0, 0, 0, 0, 40, 20, 70, 0, 0, 10, 0 },
					{ 0, 70, 0, 0, 0, 0, 50, 90, 30, 60, 0, 10 },
					{ 70, 50, 0, 0, 0, 0, 0, 0, 10, 0, 0, 30 },
					{ 0, 0, 40, 0, 0, 0, 60, 0, 80, 50, 0, 30 },
					{ 40, 0, 20, 50, 0, 60, 0, 0, 10, 0, 30, 0 },
					{ 60, 0, 70, 90, 0, 0, 0, 0, 0, 20, 0, 0 },
					{ 0, 20, 0, 30, 10, 80, 10, 0, 0, 0, 60, 0 },
					{ 0, 0, 0, 60, 0, 50, 0, 20, 0, 0, 80, 0 },
					{ 30, 0, 10, 0, 0, 0, 30, 0, 60, 80, 0, 0 },
					{ 0, 40, 50, 10, 30, 30, 0, 0, 0, 0, 0, 0 } };

		if (isSymmetric(mat, 3))
			System.out.println("Yes");
		else
			System.out.println("No");

	}
}